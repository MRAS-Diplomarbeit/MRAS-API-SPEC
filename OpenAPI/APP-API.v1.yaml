openapi: 3.0.0
info:
  title: APP-API
  version: '1.0'
  contact:
    email: lukas.koenig02@gmail.com
    name: Lukas KÃ¶nig
  description: API for communication between the MRAS WebApp/App and the Server
servers:
  - url: 'http://localhost:3000/api/v1'
paths:
  /user/register:
    parameters: []
    post:
      summary: Register User
      operationId: registerUser
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
                required:
                  - token
          headers: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
                required:
                  - error
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
                required:
                  - error
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                  description: sha-256 hashed password
              required:
                - username
                - password
      description: ''
  /user/login:
    post:
      summary: Login User
      operationId: loginUser
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                  description: sha-256 hashed password
              required:
                - username
                - password
    parameters: []
  '/user/{id}/permissions':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    patch:
      summary: Update User Permissions
      operationId: updateUserPermissions
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userid:
                  type: string
                privileges:
                  $ref: '#/components/schemas/Permissions'
              required:
                - userid
                - privileges
      description: Updates user permissions
      security:
        - bearerAuth: []
  /user:
    get:
      summary: Get All Users
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
              examples: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
      operationId: getAllUsers
      security:
        - bearerAuth: []
    parameters: []
  /room:
    parameters: []
    post:
      summary: Create a new Room
      operationId: createRoom
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/User'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                desciption:
                  type: string
                dimensions:
                  type: object
                  properties:
                    hieght:
                      type: number
                    width:
                      type: number
            examples:
              example-1:
                value: {}
      security:
        - bearerAuth: []
    get:
      summary: Get all Rooms
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                  rooms:
                    type: array
                    items:
                      $ref: '#/components/schemas/Room'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
      operationId: getAllRooms
      security:
        - bearerAuth: []
    patch:
      summary: Update Room
      operationId: patchRoom
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  room:
                    $ref: '#/components/schemas/Room'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                room:
                  $ref: '#/components/schemas/Room'
      security:
        - bearerAuth: []
  '/room/{id}':
    get:
      summary: Get Specific Room by ID
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  room:
                    $ref: '#/components/schemas/Room'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
      operationId: getRoom
      security:
        - bearerAuth: []
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    post:
      summary: Enable Audio Playback for Room by ID
      operationId: enablePlaybackRoom
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
      description: Enable Audioplayback for a Room by ID
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                playback:
                  $ref: '#/components/schemas/Playback'
  '/user/{id}':
    get:
      summary: Get specific User by ID
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
      operationId: getUser
      description: Get Users by ID
      security:
        - bearerAuth: []
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    delete:
      summary: Delete User by ID
      operationId: deleteUser
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
      description: |-
        Deletes User from Database.
        The User sending the requests needs to be an administrator
      security:
        - bearerAuth: []
  /speaker:
    parameters: []
    post:
      summary: Add new Speaker
      operationId: addSpeaker
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  speaker:
                    $ref: '#/components/schemas/Speaker'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                speaker:
                  $ref: '#/components/schemas/Speaker'
      description: 'Add a new Speaker '
      security:
        - bearerAuth: []
    get:
      summary: Get All Speaker
      operationId: getAllSpeaker
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                  speakers:
                    type: array
                    items:
                      $ref: '#/components/schemas/Speaker'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
      description: Get All Speakers
      security:
        - bearerAuth: []
    patch:
      summary: Update Speaker
      operationId: patchSpeaker
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  speaker:
                    $ref: '#/components/schemas/Speaker'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                speaker:
                  $ref: '#/components/schemas/Speaker'
      security:
        - bearerAuth: []
  /user/logout:
    get:
      summary: Logout User
      tags: []
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
      operationId: logoutUser
      description: logs out user an makes Token invalid
      security:
        - bearerAuth: []
    parameters: []
  '/speaker/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get Speaker by ID
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  speaker:
                    $ref: '#/components/schemas/Speaker'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
      operationId: getSpeaker
      description: Get Speaker by ID
      security:
        - bearerAuth: []
    delete:
      summary: Remove Speaker
      operationId: removeSpeaker
      responses:
        '200':
          description: OK
      description: ''
      security:
        - bearerAuth: []
    post:
      summary: Enable Audio Playback for Speaker by ID
      operationId: enablePlaybackSpeaker
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
      description: Enable Audioplayback for Speaker by ID
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                playback:
                  $ref: '#/components/schemas/Playback'
  '/speaker/group/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get Speaker Group by ID
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  gorup:
                    $ref: '#/components/schemas/SpeakerGroup'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
      operationId: getSpeakerGroupByID
      description: Get speaker Group by ID
      security:
        - bearerAuth: []
    delete:
      summary: Delete Speaker Group by ID
      operationId: deleteSpeakerGroupByID
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
      description: Delete Speaker Group by ID
      security:
        - bearerAuth: []
    post:
      summary: ''
      operationId: enablePlaybackSpeakerGroup
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                playback:
                  $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
      description: Enable Playback for Specific Speaker Group
  /speaker/group:
    get:
      summary: Get all Speaker Groups
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                  groups:
                    type: array
                    items:
                      $ref: '#/components/schemas/SpeakerGroup'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
      operationId: getAllSpeakerGroups
      security:
        - bearerAuth: []
      description: Get All Speaker Groups
    post:
      summary: Create new Speaker Group
      operationId: createSpeakerGroup
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                    $ref: '#/components/schemas/SpeakerGroup'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                group:
                  $ref: '#/components/schemas/SpeakerGroup'
      description: Create new Speakergroup
    patch:
      summary: Update Speaker Group
      operationId: updateSpeakerGroup
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                    $ref: '#/components/schemas/SpeakerGroup'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
      description: Update Specific Speaker Group
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                group:
                  $ref: '#/components/schemas/SpeakerGroup'
  /user/group:
    get:
      summary: Get all User Groups
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                  groups:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserGroup'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
      operationId: getAllUserGroups
      security:
        - bearerAuth: []
      description: get all User Permission Groups
    patch:
      summary: Update User Group
      operationId: updateUserGroup
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                    $ref: '#/components/schemas/UserGroup'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
      description: update existing UserGroup
      security:
        - bearerAuth: []
    post:
      summary: Create new User Group
      operationId: createUserGroup
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                    $ref: '#/components/schemas/UserGroup'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
        '501':
          description: Not Implemented
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                group:
                  $ref: '#/components/schemas/UserGroup'
      description: create new User Group
      security:
        - bearerAuth: []
  '/user/group/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get User Group by ID
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                    $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
      operationId: getUserGroupByID
      description: get specific User Group by ID
      security:
        - bearerAuth: []
    delete:
      summary: Delete User Group by ID
      operationId: deleteUserGroupByID
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
      description: delete specific User Group
      security:
        - bearerAuth: []
  /refresh:
    get:
      summary: Refresh devices
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  speakers:
                    type: array
                    items:
                      $ref: '#/components/schemas/Speaker'
                  speakergroups:
                    type: array
                    items:
                      $ref: '#/components/schemas/SpeakerGroup'
                  rooms:
                    type: array
                    items:
                      $ref: '#/components/schemas/Room'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
      operationId: refreshDevices
      description: Get update from Server with new Devices and updates
      security:
        - bearerAuth: []
components:
  schemas:
    Room:
      title: Room
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        dimensions:
          type: object
          description: not used yet
          properties:
            height:
              type: number
            width:
              type: number
    Speaker:
      title: Speaker
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        position:
          type: object
          description: not used yet
          properties:
            x:
              type: number
            'y':
              type: number
        room_id:
          type: string
    User:
      title: User
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        usergroup_ids:
          type: array
          items:
            type: string
    Error:
      title: Error
      type: object
      properties:
        code:
          type: string
        message:
          type: string
    Permissions:
      title: Permissions
      type: object
      properties:
        admin:
          type: boolean
        canedit:
          type: boolean
        speaker_ids:
          type: array
          description: speaker id
          items:
            type: string
        room_ids:
          type: array
          description: room id
          items:
            type: string
        speakergroup_ids:
          type: array
          items:
            type: string
    SpeakerGroup:
      title: SpeakerGroup
      type: object
      description: ''
      properties:
        id:
          type: string
        name:
          type: string
        speaker_ids:
          type: string
    UserGroup:
      title: UserGroup
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        perms:
          $ref: '#/components/schemas/Permissions'
    Playback:
      title: Playback
      type: object
      properties:
        displayname:
          type: string
        method:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    api_secret:
      name: api_secret
      type: apiKey
      in: header
security:
  - api_secret: []
